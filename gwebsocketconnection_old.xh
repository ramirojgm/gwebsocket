#ifndef _G_WEBSOCKET_CONNECTION_
#define _G_WEBSOCKET_CONNECTION_

#include "httprequest.h"
#include "httpresponse.h"

#define G_WEBSOCKET_TYPE_CONNECTION	(g_websocket_connection_get_type())

G_DECLARE_DERIVABLE_TYPE(GWebSocketConnection,g_websocket_connection,G_WEBSOCKET,CONNECTION,GObject)

typedef enum
{
	G_WEBSOCKET_MESSAGE_TEXT,
	G_WEBSOCKET_MESSAGE_BINARY
}GWebSocketMessageType;

struct _GWebSocketConnectionClass
{
	GObjectClass parent_class;
	/* default handlers */
	void 		(*message)(
				GWebSocketConnection * connection,
				GWebSocketMessageType type,
				const gpointer data,
				gsize length);

	void		(*closed)(
				GWebSocketConnection * connection);
};

G_BEGIN_DECLS

GType			g_websocket_connection_get_type(void);

GWebSocketConnection *	g_websocket_connection_new(
						const gchar * url,
						GCancellable * cancellable,
						GError ** error
						);

GWebSocketConnection *	g_websocket_connection_factory_create_connection(
						GSocketConnection * connection
						);

gboolean		g_websocket_connection_send_string(
						GWebSocketConnection * object,
						const gchar * str,
						gsize length,
						GCancellable * cancellable,
						GError ** error);

gboolean		g_websocket_connection_send_data(
						GWebSocketConnection * object,
						gpointer data,
						gsize length,
						GCancellable * cancellable,
						GError ** error);

void			g_websocket_connection_close(
						GWebSocketConnection * object
						);

G_END_DECLS

#endif
